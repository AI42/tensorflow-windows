// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/protobuf/meta_graph.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "tensorflow/core/protobuf/meta_graph.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace tensorflow {

namespace {

const ::google::protobuf::Descriptor* MetaGraphDef_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MetaGraphDef_reflection_ = NULL;
const ::google::protobuf::Descriptor* MetaGraphDef_MetaInfoDef_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MetaGraphDef_MetaInfoDef_reflection_ = NULL;
const ::google::protobuf::Descriptor* MetaGraphDef_CollectionDefEntry_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CollectionDef_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CollectionDef_reflection_ = NULL;
struct CollectionDefOneofInstance {
  const ::tensorflow::CollectionDef_NodeList* node_list_;
  const ::tensorflow::CollectionDef_BytesList* bytes_list_;
  const ::tensorflow::CollectionDef_Int64List* int64_list_;
  const ::tensorflow::CollectionDef_FloatList* float_list_;
  const ::tensorflow::CollectionDef_AnyList* any_list_;
}* CollectionDef_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* CollectionDef_NodeList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CollectionDef_NodeList_reflection_ = NULL;
const ::google::protobuf::Descriptor* CollectionDef_BytesList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CollectionDef_BytesList_reflection_ = NULL;
const ::google::protobuf::Descriptor* CollectionDef_Int64List_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CollectionDef_Int64List_reflection_ = NULL;
const ::google::protobuf::Descriptor* CollectionDef_FloatList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CollectionDef_FloatList_reflection_ = NULL;
const ::google::protobuf::Descriptor* CollectionDef_AnyList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CollectionDef_AnyList_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto() {
  protobuf_AddDesc_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "tensorflow/core/protobuf/meta_graph.proto");
  GOOGLE_CHECK(file != NULL);
  MetaGraphDef_descriptor_ = file->message_type(0);
  static const int MetaGraphDef_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetaGraphDef, meta_info_def_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetaGraphDef, graph_def_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetaGraphDef, saver_def_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetaGraphDef, collection_def_),
  };
  MetaGraphDef_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MetaGraphDef_descriptor_,
      MetaGraphDef::default_instance_,
      MetaGraphDef_offsets_,
      -1,
      -1,
      -1,
      sizeof(MetaGraphDef),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetaGraphDef, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetaGraphDef, _is_default_instance_));
  MetaGraphDef_MetaInfoDef_descriptor_ = MetaGraphDef_descriptor_->nested_type(0);
  static const int MetaGraphDef_MetaInfoDef_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetaGraphDef_MetaInfoDef, meta_graph_version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetaGraphDef_MetaInfoDef, stripped_op_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetaGraphDef_MetaInfoDef, any_info_),
  };
  MetaGraphDef_MetaInfoDef_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MetaGraphDef_MetaInfoDef_descriptor_,
      MetaGraphDef_MetaInfoDef::default_instance_,
      MetaGraphDef_MetaInfoDef_offsets_,
      -1,
      -1,
      -1,
      sizeof(MetaGraphDef_MetaInfoDef),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetaGraphDef_MetaInfoDef, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetaGraphDef_MetaInfoDef, _is_default_instance_));
  MetaGraphDef_CollectionDefEntry_descriptor_ = MetaGraphDef_descriptor_->nested_type(1);
  CollectionDef_descriptor_ = file->message_type(1);
  static const int CollectionDef_offsets_[6] = {
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(CollectionDef_default_oneof_instance_, node_list_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(CollectionDef_default_oneof_instance_, bytes_list_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(CollectionDef_default_oneof_instance_, int64_list_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(CollectionDef_default_oneof_instance_, float_list_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(CollectionDef_default_oneof_instance_, any_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectionDef, kind_),
  };
  CollectionDef_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CollectionDef_descriptor_,
      CollectionDef::default_instance_,
      CollectionDef_offsets_,
      -1,
      -1,
      -1,
      CollectionDef_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectionDef, _oneof_case_[0]),
      sizeof(CollectionDef),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectionDef, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectionDef, _is_default_instance_));
  CollectionDef_NodeList_descriptor_ = CollectionDef_descriptor_->nested_type(0);
  static const int CollectionDef_NodeList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectionDef_NodeList, value_),
  };
  CollectionDef_NodeList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CollectionDef_NodeList_descriptor_,
      CollectionDef_NodeList::default_instance_,
      CollectionDef_NodeList_offsets_,
      -1,
      -1,
      -1,
      sizeof(CollectionDef_NodeList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectionDef_NodeList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectionDef_NodeList, _is_default_instance_));
  CollectionDef_BytesList_descriptor_ = CollectionDef_descriptor_->nested_type(1);
  static const int CollectionDef_BytesList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectionDef_BytesList, value_),
  };
  CollectionDef_BytesList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CollectionDef_BytesList_descriptor_,
      CollectionDef_BytesList::default_instance_,
      CollectionDef_BytesList_offsets_,
      -1,
      -1,
      -1,
      sizeof(CollectionDef_BytesList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectionDef_BytesList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectionDef_BytesList, _is_default_instance_));
  CollectionDef_Int64List_descriptor_ = CollectionDef_descriptor_->nested_type(2);
  static const int CollectionDef_Int64List_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectionDef_Int64List, value_),
  };
  CollectionDef_Int64List_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CollectionDef_Int64List_descriptor_,
      CollectionDef_Int64List::default_instance_,
      CollectionDef_Int64List_offsets_,
      -1,
      -1,
      -1,
      sizeof(CollectionDef_Int64List),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectionDef_Int64List, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectionDef_Int64List, _is_default_instance_));
  CollectionDef_FloatList_descriptor_ = CollectionDef_descriptor_->nested_type(3);
  static const int CollectionDef_FloatList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectionDef_FloatList, value_),
  };
  CollectionDef_FloatList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CollectionDef_FloatList_descriptor_,
      CollectionDef_FloatList::default_instance_,
      CollectionDef_FloatList_offsets_,
      -1,
      -1,
      -1,
      sizeof(CollectionDef_FloatList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectionDef_FloatList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectionDef_FloatList, _is_default_instance_));
  CollectionDef_AnyList_descriptor_ = CollectionDef_descriptor_->nested_type(4);
  static const int CollectionDef_AnyList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectionDef_AnyList, value_),
  };
  CollectionDef_AnyList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CollectionDef_AnyList_descriptor_,
      CollectionDef_AnyList::default_instance_,
      CollectionDef_AnyList_offsets_,
      -1,
      -1,
      -1,
      sizeof(CollectionDef_AnyList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectionDef_AnyList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectionDef_AnyList, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MetaGraphDef_descriptor_, &MetaGraphDef::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MetaGraphDef_MetaInfoDef_descriptor_, &MetaGraphDef_MetaInfoDef::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        MetaGraphDef_CollectionDefEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::tensorflow::CollectionDef,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
            0>::CreateDefaultInstance(
                MetaGraphDef_CollectionDefEntry_descriptor_));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CollectionDef_descriptor_, &CollectionDef::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CollectionDef_NodeList_descriptor_, &CollectionDef_NodeList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CollectionDef_BytesList_descriptor_, &CollectionDef_BytesList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CollectionDef_Int64List_descriptor_, &CollectionDef_Int64List::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CollectionDef_FloatList_descriptor_, &CollectionDef_FloatList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CollectionDef_AnyList_descriptor_, &CollectionDef_AnyList::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto() {
  delete MetaGraphDef::default_instance_;
  delete MetaGraphDef_reflection_;
  delete MetaGraphDef_MetaInfoDef::default_instance_;
  delete MetaGraphDef_MetaInfoDef_reflection_;
  delete CollectionDef::default_instance_;
  delete CollectionDef_default_oneof_instance_;
  delete CollectionDef_reflection_;
  delete CollectionDef_NodeList::default_instance_;
  delete CollectionDef_NodeList_reflection_;
  delete CollectionDef_BytesList::default_instance_;
  delete CollectionDef_BytesList_reflection_;
  delete CollectionDef_Int64List::default_instance_;
  delete CollectionDef_Int64List_reflection_;
  delete CollectionDef_FloatList::default_instance_;
  delete CollectionDef_FloatList_reflection_;
  delete CollectionDef_AnyList::default_instance_;
  delete CollectionDef_AnyList_reflection_;
}

void protobuf_AddDesc_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fany_2eproto();
  ::tensorflow::protobuf_AddDesc_tensorflow_2fcore_2fframework_2fgraph_2eproto();
  ::tensorflow::protobuf_AddDesc_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto();
  ::tensorflow::protobuf_AddDesc_tensorflow_2fcore_2fprotobuf_2fsaver_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n)tensorflow/core/protobuf/meta_graph.pr"
    "oto\022\ntensorflow\032\031google/protobuf/any.pro"
    "to\032%tensorflow/core/framework/graph.prot"
    "o\032&tensorflow/core/framework/op_def.prot"
    "o\032$tensorflow/core/protobuf/saver.proto\""
    "\264\003\n\014MetaGraphDef\022;\n\rmeta_info_def\030\001 \001(\0132"
    "$.tensorflow.MetaGraphDef.MetaInfoDef\022\'\n"
    "\tgraph_def\030\002 \001(\0132\024.tensorflow.GraphDef\022\'"
    "\n\tsaver_def\030\003 \001(\0132\024.tensorflow.SaverDef\022"
    "C\n\016collection_def\030\004 \003(\0132+.tensorflow.Met"
    "aGraphDef.CollectionDefEntry\032\177\n\013MetaInfo"
    "Def\022\032\n\022meta_graph_version\030\001 \001(\t\022,\n\020strip"
    "ped_op_list\030\002 \001(\0132\022.tensorflow.OpList\022&\n"
    "\010any_info\030\003 \001(\0132\024.google.protobuf.Any\032O\n"
    "\022CollectionDefEntry\022\013\n\003key\030\001 \001(\t\022(\n\005valu"
    "e\030\002 \001(\0132\031.tensorflow.CollectionDef:\0028\001\"\337"
    "\003\n\rCollectionDef\0227\n\tnode_list\030\001 \001(\0132\".te"
    "nsorflow.CollectionDef.NodeListH\000\0229\n\nbyt"
    "es_list\030\002 \001(\0132#.tensorflow.CollectionDef"
    ".BytesListH\000\0229\n\nint64_list\030\003 \001(\0132#.tenso"
    "rflow.CollectionDef.Int64ListH\000\0229\n\nfloat"
    "_list\030\004 \001(\0132#.tensorflow.CollectionDef.F"
    "loatListH\000\0225\n\010any_list\030\005 \001(\0132!.tensorflo"
    "w.CollectionDef.AnyListH\000\032\031\n\010NodeList\022\r\n"
    "\005value\030\001 \003(\t\032\032\n\tBytesList\022\r\n\005value\030\001 \003(\014"
    "\032\036\n\tInt64List\022\021\n\005value\030\001 \003(\003B\002\020\001\032\036\n\tFloa"
    "tList\022\021\n\005value\030\001 \003(\002B\002\020\001\032.\n\007AnyList\022#\n\005v"
    "alue\030\001 \003(\0132\024.google.protobuf.AnyB\006\n\004kind"
    "B-\n\030org.tensorflow.frameworkB\017MetaGraphP"
    "rotosP\001b\006proto3", 1175);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow/core/protobuf/meta_graph.proto", &protobuf_RegisterTypes);
  MetaGraphDef::default_instance_ = new MetaGraphDef();
  MetaGraphDef_MetaInfoDef::default_instance_ = new MetaGraphDef_MetaInfoDef();
  CollectionDef::default_instance_ = new CollectionDef();
  CollectionDef_default_oneof_instance_ = new CollectionDefOneofInstance();
  CollectionDef_NodeList::default_instance_ = new CollectionDef_NodeList();
  CollectionDef_BytesList::default_instance_ = new CollectionDef_BytesList();
  CollectionDef_Int64List::default_instance_ = new CollectionDef_Int64List();
  CollectionDef_FloatList::default_instance_ = new CollectionDef_FloatList();
  CollectionDef_AnyList::default_instance_ = new CollectionDef_AnyList();
  MetaGraphDef::default_instance_->InitAsDefaultInstance();
  MetaGraphDef_MetaInfoDef::default_instance_->InitAsDefaultInstance();
  CollectionDef::default_instance_->InitAsDefaultInstance();
  CollectionDef_NodeList::default_instance_->InitAsDefaultInstance();
  CollectionDef_BytesList::default_instance_->InitAsDefaultInstance();
  CollectionDef_Int64List::default_instance_->InitAsDefaultInstance();
  CollectionDef_FloatList::default_instance_->InitAsDefaultInstance();
  CollectionDef_AnyList::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto {
  StaticDescriptorInitializer_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto() {
    protobuf_AddDesc_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto();
  }
} static_descriptor_initializer_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MetaGraphDef_MetaInfoDef::kMetaGraphVersionFieldNumber;
const int MetaGraphDef_MetaInfoDef::kStrippedOpListFieldNumber;
const int MetaGraphDef_MetaInfoDef::kAnyInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetaGraphDef_MetaInfoDef::MetaGraphDef_MetaInfoDef()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.MetaGraphDef.MetaInfoDef)
}

void MetaGraphDef_MetaInfoDef::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  stripped_op_list_ = const_cast< ::tensorflow::OpList*>(&::tensorflow::OpList::default_instance());
  any_info_ = const_cast< ::google::protobuf::Any*>(&::google::protobuf::Any::default_instance());
}

MetaGraphDef_MetaInfoDef::MetaGraphDef_MetaInfoDef(const MetaGraphDef_MetaInfoDef& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tensorflow.MetaGraphDef.MetaInfoDef)
}

void MetaGraphDef_MetaInfoDef::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  meta_graph_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stripped_op_list_ = NULL;
  any_info_ = NULL;
}

MetaGraphDef_MetaInfoDef::~MetaGraphDef_MetaInfoDef() {
  // @@protoc_insertion_point(destructor:tensorflow.MetaGraphDef.MetaInfoDef)
  SharedDtor();
}

void MetaGraphDef_MetaInfoDef::SharedDtor() {
  meta_graph_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete stripped_op_list_;
    delete any_info_;
  }
}

void MetaGraphDef_MetaInfoDef::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MetaGraphDef_MetaInfoDef::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MetaGraphDef_MetaInfoDef_descriptor_;
}

const MetaGraphDef_MetaInfoDef& MetaGraphDef_MetaInfoDef::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto();
  return *default_instance_;
}

MetaGraphDef_MetaInfoDef* MetaGraphDef_MetaInfoDef::default_instance_ = NULL;

MetaGraphDef_MetaInfoDef* MetaGraphDef_MetaInfoDef::New(::google::protobuf::Arena* arena) const {
  MetaGraphDef_MetaInfoDef* n = new MetaGraphDef_MetaInfoDef;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MetaGraphDef_MetaInfoDef::Clear() {
  meta_graph_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && stripped_op_list_ != NULL) delete stripped_op_list_;
  stripped_op_list_ = NULL;
  if (GetArenaNoVirtual() == NULL && any_info_ != NULL) delete any_info_;
  any_info_ = NULL;
}

bool MetaGraphDef_MetaInfoDef::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.MetaGraphDef.MetaInfoDef)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string meta_graph_version = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_meta_graph_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->meta_graph_version().data(), this->meta_graph_version().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.MetaGraphDef.MetaInfoDef.meta_graph_version"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_stripped_op_list;
        break;
      }

      // optional .tensorflow.OpList stripped_op_list = 2;
      case 2: {
        if (tag == 18) {
         parse_stripped_op_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_stripped_op_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_any_info;
        break;
      }

      // optional .google.protobuf.Any any_info = 3;
      case 3: {
        if (tag == 26) {
         parse_any_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_any_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.MetaGraphDef.MetaInfoDef)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.MetaGraphDef.MetaInfoDef)
  return false;
#undef DO_
}

void MetaGraphDef_MetaInfoDef::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.MetaGraphDef.MetaInfoDef)
  // optional string meta_graph_version = 1;
  if (this->meta_graph_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->meta_graph_version().data(), this->meta_graph_version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.MetaGraphDef.MetaInfoDef.meta_graph_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->meta_graph_version(), output);
  }

  // optional .tensorflow.OpList stripped_op_list = 2;
  if (this->has_stripped_op_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->stripped_op_list_, output);
  }

  // optional .google.protobuf.Any any_info = 3;
  if (this->has_any_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->any_info_, output);
  }

  // @@protoc_insertion_point(serialize_end:tensorflow.MetaGraphDef.MetaInfoDef)
}

::google::protobuf::uint8* MetaGraphDef_MetaInfoDef::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.MetaGraphDef.MetaInfoDef)
  // optional string meta_graph_version = 1;
  if (this->meta_graph_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->meta_graph_version().data(), this->meta_graph_version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.MetaGraphDef.MetaInfoDef.meta_graph_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->meta_graph_version(), target);
  }

  // optional .tensorflow.OpList stripped_op_list = 2;
  if (this->has_stripped_op_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *this->stripped_op_list_, target);
  }

  // optional .google.protobuf.Any any_info = 3;
  if (this->has_any_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, *this->any_info_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.MetaGraphDef.MetaInfoDef)
  return target;
}

int MetaGraphDef_MetaInfoDef::ByteSize() const {
  int total_size = 0;

  // optional string meta_graph_version = 1;
  if (this->meta_graph_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->meta_graph_version());
  }

  // optional .tensorflow.OpList stripped_op_list = 2;
  if (this->has_stripped_op_list()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->stripped_op_list_);
  }

  // optional .google.protobuf.Any any_info = 3;
  if (this->has_any_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->any_info_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MetaGraphDef_MetaInfoDef::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MetaGraphDef_MetaInfoDef* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MetaGraphDef_MetaInfoDef>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MetaGraphDef_MetaInfoDef::MergeFrom(const MetaGraphDef_MetaInfoDef& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.meta_graph_version().size() > 0) {

    meta_graph_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.meta_graph_version_);
  }
  if (from.has_stripped_op_list()) {
    mutable_stripped_op_list()->::tensorflow::OpList::MergeFrom(from.stripped_op_list());
  }
  if (from.has_any_info()) {
    mutable_any_info()->::google::protobuf::Any::MergeFrom(from.any_info());
  }
}

void MetaGraphDef_MetaInfoDef::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetaGraphDef_MetaInfoDef::CopyFrom(const MetaGraphDef_MetaInfoDef& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetaGraphDef_MetaInfoDef::IsInitialized() const {

  return true;
}

void MetaGraphDef_MetaInfoDef::Swap(MetaGraphDef_MetaInfoDef* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MetaGraphDef_MetaInfoDef::InternalSwap(MetaGraphDef_MetaInfoDef* other) {
  meta_graph_version_.Swap(&other->meta_graph_version_);
  std::swap(stripped_op_list_, other->stripped_op_list_);
  std::swap(any_info_, other->any_info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MetaGraphDef_MetaInfoDef::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MetaGraphDef_MetaInfoDef_descriptor_;
  metadata.reflection = MetaGraphDef_MetaInfoDef_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MetaGraphDef::kMetaInfoDefFieldNumber;
const int MetaGraphDef::kGraphDefFieldNumber;
const int MetaGraphDef::kSaverDefFieldNumber;
const int MetaGraphDef::kCollectionDefFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetaGraphDef::MetaGraphDef()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.MetaGraphDef)
}

void MetaGraphDef::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  meta_info_def_ = const_cast< ::tensorflow::MetaGraphDef_MetaInfoDef*>(&::tensorflow::MetaGraphDef_MetaInfoDef::default_instance());
  graph_def_ = const_cast< ::tensorflow::GraphDef*>(&::tensorflow::GraphDef::default_instance());
  saver_def_ = const_cast< ::tensorflow::SaverDef*>(&::tensorflow::SaverDef::default_instance());
}

MetaGraphDef::MetaGraphDef(const MetaGraphDef& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tensorflow.MetaGraphDef)
}

void MetaGraphDef::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  meta_info_def_ = NULL;
  graph_def_ = NULL;
  saver_def_ = NULL;
  collection_def_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  collection_def_.SetEntryDescriptor(
      &::tensorflow::MetaGraphDef_CollectionDefEntry_descriptor_);
}

MetaGraphDef::~MetaGraphDef() {
  // @@protoc_insertion_point(destructor:tensorflow.MetaGraphDef)
  SharedDtor();
}

void MetaGraphDef::SharedDtor() {
  if (this != default_instance_) {
    delete meta_info_def_;
    delete graph_def_;
    delete saver_def_;
  }
}

void MetaGraphDef::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MetaGraphDef::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MetaGraphDef_descriptor_;
}

const MetaGraphDef& MetaGraphDef::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto();
  return *default_instance_;
}

MetaGraphDef* MetaGraphDef::default_instance_ = NULL;

MetaGraphDef* MetaGraphDef::New(::google::protobuf::Arena* arena) const {
  MetaGraphDef* n = new MetaGraphDef;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MetaGraphDef::Clear() {
  if (GetArenaNoVirtual() == NULL && meta_info_def_ != NULL) delete meta_info_def_;
  meta_info_def_ = NULL;
  if (GetArenaNoVirtual() == NULL && graph_def_ != NULL) delete graph_def_;
  graph_def_ = NULL;
  if (GetArenaNoVirtual() == NULL && saver_def_ != NULL) delete saver_def_;
  saver_def_ = NULL;
  collection_def_.Clear();
}

bool MetaGraphDef::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.MetaGraphDef)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .tensorflow.MetaGraphDef.MetaInfoDef meta_info_def = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_meta_info_def()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_graph_def;
        break;
      }

      // optional .tensorflow.GraphDef graph_def = 2;
      case 2: {
        if (tag == 18) {
         parse_graph_def:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_graph_def()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_saver_def;
        break;
      }

      // optional .tensorflow.SaverDef saver_def = 3;
      case 3: {
        if (tag == 26) {
         parse_saver_def:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_saver_def()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_collection_def;
        break;
      }

      // map<string, .tensorflow.CollectionDef> collection_def = 4;
      case 4: {
        if (tag == 34) {
         parse_collection_def:
          DO_(input->IncrementRecursionDepth());
         parse_loop_collection_def:
          ::google::protobuf::scoped_ptr<MetaGraphDef_CollectionDefEntry> entry(collection_def_.NewEntry());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, entry.get()));
          (*mutable_collection_def())[entry->key()].Swap(entry->mutable_value());
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry->key().data(), entry->key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.MetaGraphDef.CollectionDefEntry.key"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_collection_def;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.MetaGraphDef)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.MetaGraphDef)
  return false;
#undef DO_
}

void MetaGraphDef::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.MetaGraphDef)
  // optional .tensorflow.MetaGraphDef.MetaInfoDef meta_info_def = 1;
  if (this->has_meta_info_def()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->meta_info_def_, output);
  }

  // optional .tensorflow.GraphDef graph_def = 2;
  if (this->has_graph_def()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->graph_def_, output);
  }

  // optional .tensorflow.SaverDef saver_def = 3;
  if (this->has_saver_def()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->saver_def_, output);
  }

  // map<string, .tensorflow.CollectionDef> collection_def = 4;
  {
    ::google::protobuf::scoped_ptr<MetaGraphDef_CollectionDefEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::tensorflow::CollectionDef >::const_iterator
        it = this->collection_def().begin();
        it != this->collection_def().end(); ++it) {
      entry.reset(collection_def_.NewEntryWrapper(it->first, it->second));
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
          4, *entry, output);
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        it->first.data(), it->first.length(),
        ::google::protobuf::internal::WireFormatLite::SERIALIZE,
        "tensorflow.MetaGraphDef.CollectionDefEntry.key");
    }
  }

  // @@protoc_insertion_point(serialize_end:tensorflow.MetaGraphDef)
}

::google::protobuf::uint8* MetaGraphDef::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.MetaGraphDef)
  // optional .tensorflow.MetaGraphDef.MetaInfoDef meta_info_def = 1;
  if (this->has_meta_info_def()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->meta_info_def_, target);
  }

  // optional .tensorflow.GraphDef graph_def = 2;
  if (this->has_graph_def()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *this->graph_def_, target);
  }

  // optional .tensorflow.SaverDef saver_def = 3;
  if (this->has_saver_def()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, *this->saver_def_, target);
  }

  // map<string, .tensorflow.CollectionDef> collection_def = 4;
  {
    ::google::protobuf::scoped_ptr<MetaGraphDef_CollectionDefEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::tensorflow::CollectionDef >::const_iterator
        it = this->collection_def().begin();
        it != this->collection_def().end(); ++it) {
      entry.reset(collection_def_.NewEntryWrapper(it->first, it->second));
      target = ::google::protobuf::internal::WireFormatLite::
          WriteMessageNoVirtualToArray(
              4, *entry, target);
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        it->first.data(), it->first.length(),
        ::google::protobuf::internal::WireFormatLite::SERIALIZE,
        "tensorflow.MetaGraphDef.CollectionDefEntry.key");
    }
  }

  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.MetaGraphDef)
  return target;
}

int MetaGraphDef::ByteSize() const {
  int total_size = 0;

  // optional .tensorflow.MetaGraphDef.MetaInfoDef meta_info_def = 1;
  if (this->has_meta_info_def()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->meta_info_def_);
  }

  // optional .tensorflow.GraphDef graph_def = 2;
  if (this->has_graph_def()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->graph_def_);
  }

  // optional .tensorflow.SaverDef saver_def = 3;
  if (this->has_saver_def()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->saver_def_);
  }

  // map<string, .tensorflow.CollectionDef> collection_def = 4;
  total_size += 1 * this->collection_def_size();
  {
    ::google::protobuf::scoped_ptr<MetaGraphDef_CollectionDefEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::tensorflow::CollectionDef >::const_iterator
        it = this->collection_def().begin();
        it != this->collection_def().end(); ++it) {
      entry.reset(collection_def_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MetaGraphDef::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MetaGraphDef* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MetaGraphDef>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MetaGraphDef::MergeFrom(const MetaGraphDef& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  collection_def_.MergeFrom(from.collection_def_);
  if (from.has_meta_info_def()) {
    mutable_meta_info_def()->::tensorflow::MetaGraphDef_MetaInfoDef::MergeFrom(from.meta_info_def());
  }
  if (from.has_graph_def()) {
    mutable_graph_def()->::tensorflow::GraphDef::MergeFrom(from.graph_def());
  }
  if (from.has_saver_def()) {
    mutable_saver_def()->::tensorflow::SaverDef::MergeFrom(from.saver_def());
  }
}

void MetaGraphDef::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetaGraphDef::CopyFrom(const MetaGraphDef& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetaGraphDef::IsInitialized() const {

  return true;
}

void MetaGraphDef::Swap(MetaGraphDef* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MetaGraphDef::InternalSwap(MetaGraphDef* other) {
  std::swap(meta_info_def_, other->meta_info_def_);
  std::swap(graph_def_, other->graph_def_);
  std::swap(saver_def_, other->saver_def_);
  collection_def_.Swap(&other->collection_def_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MetaGraphDef::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MetaGraphDef_descriptor_;
  metadata.reflection = MetaGraphDef_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MetaGraphDef_MetaInfoDef

// optional string meta_graph_version = 1;
void MetaGraphDef_MetaInfoDef::clear_meta_graph_version() {
  meta_graph_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MetaGraphDef_MetaInfoDef::meta_graph_version() const {
  // @@protoc_insertion_point(field_get:tensorflow.MetaGraphDef.MetaInfoDef.meta_graph_version)
  return meta_graph_version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MetaGraphDef_MetaInfoDef::set_meta_graph_version(const ::std::string& value) {
  
  meta_graph_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.MetaGraphDef.MetaInfoDef.meta_graph_version)
}
 void MetaGraphDef_MetaInfoDef::set_meta_graph_version(const char* value) {
  
  meta_graph_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.MetaGraphDef.MetaInfoDef.meta_graph_version)
}
 void MetaGraphDef_MetaInfoDef::set_meta_graph_version(const char* value, size_t size) {
  
  meta_graph_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.MetaGraphDef.MetaInfoDef.meta_graph_version)
}
 ::std::string* MetaGraphDef_MetaInfoDef::mutable_meta_graph_version() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.MetaGraphDef.MetaInfoDef.meta_graph_version)
  return meta_graph_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MetaGraphDef_MetaInfoDef::release_meta_graph_version() {
  
  return meta_graph_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MetaGraphDef_MetaInfoDef::set_allocated_meta_graph_version(::std::string* meta_graph_version) {
  if (meta_graph_version != NULL) {
    
  } else {
    
  }
  meta_graph_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), meta_graph_version);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.MetaGraphDef.MetaInfoDef.meta_graph_version)
}

// optional .tensorflow.OpList stripped_op_list = 2;
bool MetaGraphDef_MetaInfoDef::has_stripped_op_list() const {
  return !_is_default_instance_ && stripped_op_list_ != NULL;
}
void MetaGraphDef_MetaInfoDef::clear_stripped_op_list() {
  if (GetArenaNoVirtual() == NULL && stripped_op_list_ != NULL) delete stripped_op_list_;
  stripped_op_list_ = NULL;
}
const ::tensorflow::OpList& MetaGraphDef_MetaInfoDef::stripped_op_list() const {
  // @@protoc_insertion_point(field_get:tensorflow.MetaGraphDef.MetaInfoDef.stripped_op_list)
  return stripped_op_list_ != NULL ? *stripped_op_list_ : *default_instance_->stripped_op_list_;
}
::tensorflow::OpList* MetaGraphDef_MetaInfoDef::mutable_stripped_op_list() {
  
  if (stripped_op_list_ == NULL) {
    stripped_op_list_ = new ::tensorflow::OpList;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.MetaGraphDef.MetaInfoDef.stripped_op_list)
  return stripped_op_list_;
}
::tensorflow::OpList* MetaGraphDef_MetaInfoDef::release_stripped_op_list() {
  
  ::tensorflow::OpList* temp = stripped_op_list_;
  stripped_op_list_ = NULL;
  return temp;
}
void MetaGraphDef_MetaInfoDef::set_allocated_stripped_op_list(::tensorflow::OpList* stripped_op_list) {
  delete stripped_op_list_;
  stripped_op_list_ = stripped_op_list;
  if (stripped_op_list) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.MetaGraphDef.MetaInfoDef.stripped_op_list)
}

// optional .google.protobuf.Any any_info = 3;
bool MetaGraphDef_MetaInfoDef::has_any_info() const {
  return !_is_default_instance_ && any_info_ != NULL;
}
void MetaGraphDef_MetaInfoDef::clear_any_info() {
  if (GetArenaNoVirtual() == NULL && any_info_ != NULL) delete any_info_;
  any_info_ = NULL;
}
const ::google::protobuf::Any& MetaGraphDef_MetaInfoDef::any_info() const {
  // @@protoc_insertion_point(field_get:tensorflow.MetaGraphDef.MetaInfoDef.any_info)
  return any_info_ != NULL ? *any_info_ : *default_instance_->any_info_;
}
::google::protobuf::Any* MetaGraphDef_MetaInfoDef::mutable_any_info() {
  
  if (any_info_ == NULL) {
    any_info_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.MetaGraphDef.MetaInfoDef.any_info)
  return any_info_;
}
::google::protobuf::Any* MetaGraphDef_MetaInfoDef::release_any_info() {
  
  ::google::protobuf::Any* temp = any_info_;
  any_info_ = NULL;
  return temp;
}
void MetaGraphDef_MetaInfoDef::set_allocated_any_info(::google::protobuf::Any* any_info) {
  delete any_info_;
  any_info_ = any_info;
  if (any_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.MetaGraphDef.MetaInfoDef.any_info)
}

// -------------------------------------------------------------------

// MetaGraphDef

// optional .tensorflow.MetaGraphDef.MetaInfoDef meta_info_def = 1;
bool MetaGraphDef::has_meta_info_def() const {
  return !_is_default_instance_ && meta_info_def_ != NULL;
}
void MetaGraphDef::clear_meta_info_def() {
  if (GetArenaNoVirtual() == NULL && meta_info_def_ != NULL) delete meta_info_def_;
  meta_info_def_ = NULL;
}
const ::tensorflow::MetaGraphDef_MetaInfoDef& MetaGraphDef::meta_info_def() const {
  // @@protoc_insertion_point(field_get:tensorflow.MetaGraphDef.meta_info_def)
  return meta_info_def_ != NULL ? *meta_info_def_ : *default_instance_->meta_info_def_;
}
::tensorflow::MetaGraphDef_MetaInfoDef* MetaGraphDef::mutable_meta_info_def() {
  
  if (meta_info_def_ == NULL) {
    meta_info_def_ = new ::tensorflow::MetaGraphDef_MetaInfoDef;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.MetaGraphDef.meta_info_def)
  return meta_info_def_;
}
::tensorflow::MetaGraphDef_MetaInfoDef* MetaGraphDef::release_meta_info_def() {
  
  ::tensorflow::MetaGraphDef_MetaInfoDef* temp = meta_info_def_;
  meta_info_def_ = NULL;
  return temp;
}
void MetaGraphDef::set_allocated_meta_info_def(::tensorflow::MetaGraphDef_MetaInfoDef* meta_info_def) {
  delete meta_info_def_;
  meta_info_def_ = meta_info_def;
  if (meta_info_def) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.MetaGraphDef.meta_info_def)
}

// optional .tensorflow.GraphDef graph_def = 2;
bool MetaGraphDef::has_graph_def() const {
  return !_is_default_instance_ && graph_def_ != NULL;
}
void MetaGraphDef::clear_graph_def() {
  if (GetArenaNoVirtual() == NULL && graph_def_ != NULL) delete graph_def_;
  graph_def_ = NULL;
}
const ::tensorflow::GraphDef& MetaGraphDef::graph_def() const {
  // @@protoc_insertion_point(field_get:tensorflow.MetaGraphDef.graph_def)
  return graph_def_ != NULL ? *graph_def_ : *default_instance_->graph_def_;
}
::tensorflow::GraphDef* MetaGraphDef::mutable_graph_def() {
  
  if (graph_def_ == NULL) {
    graph_def_ = new ::tensorflow::GraphDef;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.MetaGraphDef.graph_def)
  return graph_def_;
}
::tensorflow::GraphDef* MetaGraphDef::release_graph_def() {
  
  ::tensorflow::GraphDef* temp = graph_def_;
  graph_def_ = NULL;
  return temp;
}
void MetaGraphDef::set_allocated_graph_def(::tensorflow::GraphDef* graph_def) {
  delete graph_def_;
  graph_def_ = graph_def;
  if (graph_def) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.MetaGraphDef.graph_def)
}

// optional .tensorflow.SaverDef saver_def = 3;
bool MetaGraphDef::has_saver_def() const {
  return !_is_default_instance_ && saver_def_ != NULL;
}
void MetaGraphDef::clear_saver_def() {
  if (GetArenaNoVirtual() == NULL && saver_def_ != NULL) delete saver_def_;
  saver_def_ = NULL;
}
const ::tensorflow::SaverDef& MetaGraphDef::saver_def() const {
  // @@protoc_insertion_point(field_get:tensorflow.MetaGraphDef.saver_def)
  return saver_def_ != NULL ? *saver_def_ : *default_instance_->saver_def_;
}
::tensorflow::SaverDef* MetaGraphDef::mutable_saver_def() {
  
  if (saver_def_ == NULL) {
    saver_def_ = new ::tensorflow::SaverDef;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.MetaGraphDef.saver_def)
  return saver_def_;
}
::tensorflow::SaverDef* MetaGraphDef::release_saver_def() {
  
  ::tensorflow::SaverDef* temp = saver_def_;
  saver_def_ = NULL;
  return temp;
}
void MetaGraphDef::set_allocated_saver_def(::tensorflow::SaverDef* saver_def) {
  delete saver_def_;
  saver_def_ = saver_def;
  if (saver_def) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.MetaGraphDef.saver_def)
}

// map<string, .tensorflow.CollectionDef> collection_def = 4;
int MetaGraphDef::collection_def_size() const {
  return collection_def_.size();
}
void MetaGraphDef::clear_collection_def() {
  collection_def_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::tensorflow::CollectionDef >&
MetaGraphDef::collection_def() const {
  // @@protoc_insertion_point(field_map:tensorflow.MetaGraphDef.collection_def)
  return collection_def_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::tensorflow::CollectionDef >*
MetaGraphDef::mutable_collection_def() {
  // @@protoc_insertion_point(field_mutable_map:tensorflow.MetaGraphDef.collection_def)
  return collection_def_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CollectionDef_NodeList::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CollectionDef_NodeList::CollectionDef_NodeList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.CollectionDef.NodeList)
}

void CollectionDef_NodeList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CollectionDef_NodeList::CollectionDef_NodeList(const CollectionDef_NodeList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tensorflow.CollectionDef.NodeList)
}

void CollectionDef_NodeList::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
}

CollectionDef_NodeList::~CollectionDef_NodeList() {
  // @@protoc_insertion_point(destructor:tensorflow.CollectionDef.NodeList)
  SharedDtor();
}

void CollectionDef_NodeList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CollectionDef_NodeList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CollectionDef_NodeList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CollectionDef_NodeList_descriptor_;
}

const CollectionDef_NodeList& CollectionDef_NodeList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto();
  return *default_instance_;
}

CollectionDef_NodeList* CollectionDef_NodeList::default_instance_ = NULL;

CollectionDef_NodeList* CollectionDef_NodeList::New(::google::protobuf::Arena* arena) const {
  CollectionDef_NodeList* n = new CollectionDef_NodeList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CollectionDef_NodeList::Clear() {
  value_.Clear();
}

bool CollectionDef_NodeList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.CollectionDef.NodeList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string value = 1;
      case 1: {
        if (tag == 10) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value(this->value_size() - 1).data(),
            this->value(this->value_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.CollectionDef.NodeList.value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_value;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.CollectionDef.NodeList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.CollectionDef.NodeList)
  return false;
#undef DO_
}

void CollectionDef_NodeList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.CollectionDef.NodeList)
  // repeated string value = 1;
  for (int i = 0; i < this->value_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value(i).data(), this->value(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CollectionDef.NodeList.value");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->value(i), output);
  }

  // @@protoc_insertion_point(serialize_end:tensorflow.CollectionDef.NodeList)
}

::google::protobuf::uint8* CollectionDef_NodeList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.CollectionDef.NodeList)
  // repeated string value = 1;
  for (int i = 0; i < this->value_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value(i).data(), this->value(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CollectionDef.NodeList.value");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->value(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.CollectionDef.NodeList)
  return target;
}

int CollectionDef_NodeList::ByteSize() const {
  int total_size = 0;

  // repeated string value = 1;
  total_size += 1 * this->value_size();
  for (int i = 0; i < this->value_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->value(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CollectionDef_NodeList::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CollectionDef_NodeList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CollectionDef_NodeList>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CollectionDef_NodeList::MergeFrom(const CollectionDef_NodeList& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  value_.MergeFrom(from.value_);
}

void CollectionDef_NodeList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CollectionDef_NodeList::CopyFrom(const CollectionDef_NodeList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CollectionDef_NodeList::IsInitialized() const {

  return true;
}

void CollectionDef_NodeList::Swap(CollectionDef_NodeList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CollectionDef_NodeList::InternalSwap(CollectionDef_NodeList* other) {
  value_.UnsafeArenaSwap(&other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CollectionDef_NodeList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CollectionDef_NodeList_descriptor_;
  metadata.reflection = CollectionDef_NodeList_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CollectionDef_BytesList::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CollectionDef_BytesList::CollectionDef_BytesList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.CollectionDef.BytesList)
}

void CollectionDef_BytesList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CollectionDef_BytesList::CollectionDef_BytesList(const CollectionDef_BytesList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tensorflow.CollectionDef.BytesList)
}

void CollectionDef_BytesList::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
}

CollectionDef_BytesList::~CollectionDef_BytesList() {
  // @@protoc_insertion_point(destructor:tensorflow.CollectionDef.BytesList)
  SharedDtor();
}

void CollectionDef_BytesList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CollectionDef_BytesList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CollectionDef_BytesList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CollectionDef_BytesList_descriptor_;
}

const CollectionDef_BytesList& CollectionDef_BytesList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto();
  return *default_instance_;
}

CollectionDef_BytesList* CollectionDef_BytesList::default_instance_ = NULL;

CollectionDef_BytesList* CollectionDef_BytesList::New(::google::protobuf::Arena* arena) const {
  CollectionDef_BytesList* n = new CollectionDef_BytesList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CollectionDef_BytesList::Clear() {
  value_.Clear();
}

bool CollectionDef_BytesList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.CollectionDef.BytesList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes value = 1;
      case 1: {
        if (tag == 10) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_value()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_value;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.CollectionDef.BytesList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.CollectionDef.BytesList)
  return false;
#undef DO_
}

void CollectionDef_BytesList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.CollectionDef.BytesList)
  // repeated bytes value = 1;
  for (int i = 0; i < this->value_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->value(i), output);
  }

  // @@protoc_insertion_point(serialize_end:tensorflow.CollectionDef.BytesList)
}

::google::protobuf::uint8* CollectionDef_BytesList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.CollectionDef.BytesList)
  // repeated bytes value = 1;
  for (int i = 0; i < this->value_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->value(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.CollectionDef.BytesList)
  return target;
}

int CollectionDef_BytesList::ByteSize() const {
  int total_size = 0;

  // repeated bytes value = 1;
  total_size += 1 * this->value_size();
  for (int i = 0; i < this->value_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->value(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CollectionDef_BytesList::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CollectionDef_BytesList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CollectionDef_BytesList>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CollectionDef_BytesList::MergeFrom(const CollectionDef_BytesList& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  value_.MergeFrom(from.value_);
}

void CollectionDef_BytesList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CollectionDef_BytesList::CopyFrom(const CollectionDef_BytesList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CollectionDef_BytesList::IsInitialized() const {

  return true;
}

void CollectionDef_BytesList::Swap(CollectionDef_BytesList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CollectionDef_BytesList::InternalSwap(CollectionDef_BytesList* other) {
  value_.UnsafeArenaSwap(&other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CollectionDef_BytesList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CollectionDef_BytesList_descriptor_;
  metadata.reflection = CollectionDef_BytesList_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CollectionDef_Int64List::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CollectionDef_Int64List::CollectionDef_Int64List()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.CollectionDef.Int64List)
}

void CollectionDef_Int64List::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CollectionDef_Int64List::CollectionDef_Int64List(const CollectionDef_Int64List& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tensorflow.CollectionDef.Int64List)
}

void CollectionDef_Int64List::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

CollectionDef_Int64List::~CollectionDef_Int64List() {
  // @@protoc_insertion_point(destructor:tensorflow.CollectionDef.Int64List)
  SharedDtor();
}

void CollectionDef_Int64List::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CollectionDef_Int64List::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CollectionDef_Int64List::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CollectionDef_Int64List_descriptor_;
}

const CollectionDef_Int64List& CollectionDef_Int64List::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto();
  return *default_instance_;
}

CollectionDef_Int64List* CollectionDef_Int64List::default_instance_ = NULL;

CollectionDef_Int64List* CollectionDef_Int64List::New(::google::protobuf::Arena* arena) const {
  CollectionDef_Int64List* n = new CollectionDef_Int64List;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CollectionDef_Int64List::Clear() {
  value_.Clear();
}

bool CollectionDef_Int64List::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.CollectionDef.Int64List)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 value = 1 [packed = true];
      case 1: {
        if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_value())));
        } else if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 10, input, this->mutable_value())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.CollectionDef.Int64List)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.CollectionDef.Int64List)
  return false;
#undef DO_
}

void CollectionDef_Int64List::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.CollectionDef.Int64List)
  // repeated int64 value = 1 [packed = true];
  if (this->value_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_value_cached_byte_size_);
  }
  for (int i = 0; i < this->value_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->value(i), output);
  }

  // @@protoc_insertion_point(serialize_end:tensorflow.CollectionDef.Int64List)
}

::google::protobuf::uint8* CollectionDef_Int64List::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.CollectionDef.Int64List)
  // repeated int64 value = 1 [packed = true];
  if (this->value_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _value_cached_byte_size_, target);
  }
  for (int i = 0; i < this->value_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->value(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.CollectionDef.Int64List)
  return target;
}

int CollectionDef_Int64List::ByteSize() const {
  int total_size = 0;

  // repeated int64 value = 1 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->value_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->value(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _value_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CollectionDef_Int64List::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CollectionDef_Int64List* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CollectionDef_Int64List>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CollectionDef_Int64List::MergeFrom(const CollectionDef_Int64List& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  value_.MergeFrom(from.value_);
}

void CollectionDef_Int64List::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CollectionDef_Int64List::CopyFrom(const CollectionDef_Int64List& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CollectionDef_Int64List::IsInitialized() const {

  return true;
}

void CollectionDef_Int64List::Swap(CollectionDef_Int64List* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CollectionDef_Int64List::InternalSwap(CollectionDef_Int64List* other) {
  value_.UnsafeArenaSwap(&other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CollectionDef_Int64List::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CollectionDef_Int64List_descriptor_;
  metadata.reflection = CollectionDef_Int64List_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CollectionDef_FloatList::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CollectionDef_FloatList::CollectionDef_FloatList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.CollectionDef.FloatList)
}

void CollectionDef_FloatList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CollectionDef_FloatList::CollectionDef_FloatList(const CollectionDef_FloatList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tensorflow.CollectionDef.FloatList)
}

void CollectionDef_FloatList::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

CollectionDef_FloatList::~CollectionDef_FloatList() {
  // @@protoc_insertion_point(destructor:tensorflow.CollectionDef.FloatList)
  SharedDtor();
}

void CollectionDef_FloatList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CollectionDef_FloatList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CollectionDef_FloatList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CollectionDef_FloatList_descriptor_;
}

const CollectionDef_FloatList& CollectionDef_FloatList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto();
  return *default_instance_;
}

CollectionDef_FloatList* CollectionDef_FloatList::default_instance_ = NULL;

CollectionDef_FloatList* CollectionDef_FloatList::New(::google::protobuf::Arena* arena) const {
  CollectionDef_FloatList* n = new CollectionDef_FloatList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CollectionDef_FloatList::Clear() {
  value_.Clear();
}

bool CollectionDef_FloatList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.CollectionDef.FloatList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float value = 1 [packed = true];
      case 1: {
        if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_value())));
        } else if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 10, input, this->mutable_value())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.CollectionDef.FloatList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.CollectionDef.FloatList)
  return false;
#undef DO_
}

void CollectionDef_FloatList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.CollectionDef.FloatList)
  // repeated float value = 1 [packed = true];
  if (this->value_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_value_cached_byte_size_);
  }
  for (int i = 0; i < this->value_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloatNoTag(
      this->value(i), output);
  }

  // @@protoc_insertion_point(serialize_end:tensorflow.CollectionDef.FloatList)
}

::google::protobuf::uint8* CollectionDef_FloatList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.CollectionDef.FloatList)
  // repeated float value = 1 [packed = true];
  if (this->value_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _value_cached_byte_size_, target);
  }
  for (int i = 0; i < this->value_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->value(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.CollectionDef.FloatList)
  return target;
}

int CollectionDef_FloatList::ByteSize() const {
  int total_size = 0;

  // repeated float value = 1 [packed = true];
  {
    int data_size = 0;
    data_size = 4 * this->value_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _value_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CollectionDef_FloatList::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CollectionDef_FloatList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CollectionDef_FloatList>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CollectionDef_FloatList::MergeFrom(const CollectionDef_FloatList& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  value_.MergeFrom(from.value_);
}

void CollectionDef_FloatList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CollectionDef_FloatList::CopyFrom(const CollectionDef_FloatList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CollectionDef_FloatList::IsInitialized() const {

  return true;
}

void CollectionDef_FloatList::Swap(CollectionDef_FloatList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CollectionDef_FloatList::InternalSwap(CollectionDef_FloatList* other) {
  value_.UnsafeArenaSwap(&other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CollectionDef_FloatList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CollectionDef_FloatList_descriptor_;
  metadata.reflection = CollectionDef_FloatList_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CollectionDef_AnyList::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CollectionDef_AnyList::CollectionDef_AnyList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.CollectionDef.AnyList)
}

void CollectionDef_AnyList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CollectionDef_AnyList::CollectionDef_AnyList(const CollectionDef_AnyList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tensorflow.CollectionDef.AnyList)
}

void CollectionDef_AnyList::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

CollectionDef_AnyList::~CollectionDef_AnyList() {
  // @@protoc_insertion_point(destructor:tensorflow.CollectionDef.AnyList)
  SharedDtor();
}

void CollectionDef_AnyList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CollectionDef_AnyList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CollectionDef_AnyList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CollectionDef_AnyList_descriptor_;
}

const CollectionDef_AnyList& CollectionDef_AnyList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto();
  return *default_instance_;
}

CollectionDef_AnyList* CollectionDef_AnyList::default_instance_ = NULL;

CollectionDef_AnyList* CollectionDef_AnyList::New(::google::protobuf::Arena* arena) const {
  CollectionDef_AnyList* n = new CollectionDef_AnyList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CollectionDef_AnyList::Clear() {
  value_.Clear();
}

bool CollectionDef_AnyList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.CollectionDef.AnyList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.protobuf.Any value = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_value()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_value;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.CollectionDef.AnyList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.CollectionDef.AnyList)
  return false;
#undef DO_
}

void CollectionDef_AnyList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.CollectionDef.AnyList)
  // repeated .google.protobuf.Any value = 1;
  for (unsigned int i = 0, n = this->value_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->value(i), output);
  }

  // @@protoc_insertion_point(serialize_end:tensorflow.CollectionDef.AnyList)
}

::google::protobuf::uint8* CollectionDef_AnyList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.CollectionDef.AnyList)
  // repeated .google.protobuf.Any value = 1;
  for (unsigned int i = 0, n = this->value_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->value(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.CollectionDef.AnyList)
  return target;
}

int CollectionDef_AnyList::ByteSize() const {
  int total_size = 0;

  // repeated .google.protobuf.Any value = 1;
  total_size += 1 * this->value_size();
  for (int i = 0; i < this->value_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->value(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CollectionDef_AnyList::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CollectionDef_AnyList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CollectionDef_AnyList>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CollectionDef_AnyList::MergeFrom(const CollectionDef_AnyList& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  value_.MergeFrom(from.value_);
}

void CollectionDef_AnyList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CollectionDef_AnyList::CopyFrom(const CollectionDef_AnyList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CollectionDef_AnyList::IsInitialized() const {

  return true;
}

void CollectionDef_AnyList::Swap(CollectionDef_AnyList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CollectionDef_AnyList::InternalSwap(CollectionDef_AnyList* other) {
  value_.UnsafeArenaSwap(&other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CollectionDef_AnyList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CollectionDef_AnyList_descriptor_;
  metadata.reflection = CollectionDef_AnyList_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CollectionDef::kNodeListFieldNumber;
const int CollectionDef::kBytesListFieldNumber;
const int CollectionDef::kInt64ListFieldNumber;
const int CollectionDef::kFloatListFieldNumber;
const int CollectionDef::kAnyListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CollectionDef::CollectionDef()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.CollectionDef)
}

void CollectionDef::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  CollectionDef_default_oneof_instance_->node_list_ = const_cast< ::tensorflow::CollectionDef_NodeList*>(&::tensorflow::CollectionDef_NodeList::default_instance());
  CollectionDef_default_oneof_instance_->bytes_list_ = const_cast< ::tensorflow::CollectionDef_BytesList*>(&::tensorflow::CollectionDef_BytesList::default_instance());
  CollectionDef_default_oneof_instance_->int64_list_ = const_cast< ::tensorflow::CollectionDef_Int64List*>(&::tensorflow::CollectionDef_Int64List::default_instance());
  CollectionDef_default_oneof_instance_->float_list_ = const_cast< ::tensorflow::CollectionDef_FloatList*>(&::tensorflow::CollectionDef_FloatList::default_instance());
  CollectionDef_default_oneof_instance_->any_list_ = const_cast< ::tensorflow::CollectionDef_AnyList*>(&::tensorflow::CollectionDef_AnyList::default_instance());
}

CollectionDef::CollectionDef(const CollectionDef& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tensorflow.CollectionDef)
}

void CollectionDef::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  clear_has_kind();
}

CollectionDef::~CollectionDef() {
  // @@protoc_insertion_point(destructor:tensorflow.CollectionDef)
  SharedDtor();
}

void CollectionDef::SharedDtor() {
  if (has_kind()) {
    clear_kind();
  }
  if (this != default_instance_) {
  }
}

void CollectionDef::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CollectionDef::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CollectionDef_descriptor_;
}

const CollectionDef& CollectionDef::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto();
  return *default_instance_;
}

CollectionDef* CollectionDef::default_instance_ = NULL;

CollectionDef* CollectionDef::New(::google::protobuf::Arena* arena) const {
  CollectionDef* n = new CollectionDef;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CollectionDef::clear_kind() {
  switch(kind_case()) {
    case kNodeList: {
      delete kind_.node_list_;
      break;
    }
    case kBytesList: {
      delete kind_.bytes_list_;
      break;
    }
    case kInt64List: {
      delete kind_.int64_list_;
      break;
    }
    case kFloatList: {
      delete kind_.float_list_;
      break;
    }
    case kAnyList: {
      delete kind_.any_list_;
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = KIND_NOT_SET;
}


void CollectionDef::Clear() {
  clear_kind();
}

bool CollectionDef::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.CollectionDef)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .tensorflow.CollectionDef.NodeList node_list = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_node_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_bytes_list;
        break;
      }

      // optional .tensorflow.CollectionDef.BytesList bytes_list = 2;
      case 2: {
        if (tag == 18) {
         parse_bytes_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bytes_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_int64_list;
        break;
      }

      // optional .tensorflow.CollectionDef.Int64List int64_list = 3;
      case 3: {
        if (tag == 26) {
         parse_int64_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_int64_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_float_list;
        break;
      }

      // optional .tensorflow.CollectionDef.FloatList float_list = 4;
      case 4: {
        if (tag == 34) {
         parse_float_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_float_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_any_list;
        break;
      }

      // optional .tensorflow.CollectionDef.AnyList any_list = 5;
      case 5: {
        if (tag == 42) {
         parse_any_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_any_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.CollectionDef)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.CollectionDef)
  return false;
#undef DO_
}

void CollectionDef::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.CollectionDef)
  // optional .tensorflow.CollectionDef.NodeList node_list = 1;
  if (has_node_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *kind_.node_list_, output);
  }

  // optional .tensorflow.CollectionDef.BytesList bytes_list = 2;
  if (has_bytes_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *kind_.bytes_list_, output);
  }

  // optional .tensorflow.CollectionDef.Int64List int64_list = 3;
  if (has_int64_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *kind_.int64_list_, output);
  }

  // optional .tensorflow.CollectionDef.FloatList float_list = 4;
  if (has_float_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *kind_.float_list_, output);
  }

  // optional .tensorflow.CollectionDef.AnyList any_list = 5;
  if (has_any_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *kind_.any_list_, output);
  }

  // @@protoc_insertion_point(serialize_end:tensorflow.CollectionDef)
}

::google::protobuf::uint8* CollectionDef::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.CollectionDef)
  // optional .tensorflow.CollectionDef.NodeList node_list = 1;
  if (has_node_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *kind_.node_list_, target);
  }

  // optional .tensorflow.CollectionDef.BytesList bytes_list = 2;
  if (has_bytes_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *kind_.bytes_list_, target);
  }

  // optional .tensorflow.CollectionDef.Int64List int64_list = 3;
  if (has_int64_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, *kind_.int64_list_, target);
  }

  // optional .tensorflow.CollectionDef.FloatList float_list = 4;
  if (has_float_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, *kind_.float_list_, target);
  }

  // optional .tensorflow.CollectionDef.AnyList any_list = 5;
  if (has_any_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, *kind_.any_list_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.CollectionDef)
  return target;
}

int CollectionDef::ByteSize() const {
  int total_size = 0;

  switch (kind_case()) {
    // optional .tensorflow.CollectionDef.NodeList node_list = 1;
    case kNodeList: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *kind_.node_list_);
      break;
    }
    // optional .tensorflow.CollectionDef.BytesList bytes_list = 2;
    case kBytesList: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *kind_.bytes_list_);
      break;
    }
    // optional .tensorflow.CollectionDef.Int64List int64_list = 3;
    case kInt64List: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *kind_.int64_list_);
      break;
    }
    // optional .tensorflow.CollectionDef.FloatList float_list = 4;
    case kFloatList: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *kind_.float_list_);
      break;
    }
    // optional .tensorflow.CollectionDef.AnyList any_list = 5;
    case kAnyList: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *kind_.any_list_);
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CollectionDef::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CollectionDef* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CollectionDef>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CollectionDef::MergeFrom(const CollectionDef& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  switch (from.kind_case()) {
    case kNodeList: {
      mutable_node_list()->::tensorflow::CollectionDef_NodeList::MergeFrom(from.node_list());
      break;
    }
    case kBytesList: {
      mutable_bytes_list()->::tensorflow::CollectionDef_BytesList::MergeFrom(from.bytes_list());
      break;
    }
    case kInt64List: {
      mutable_int64_list()->::tensorflow::CollectionDef_Int64List::MergeFrom(from.int64_list());
      break;
    }
    case kFloatList: {
      mutable_float_list()->::tensorflow::CollectionDef_FloatList::MergeFrom(from.float_list());
      break;
    }
    case kAnyList: {
      mutable_any_list()->::tensorflow::CollectionDef_AnyList::MergeFrom(from.any_list());
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
}

void CollectionDef::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CollectionDef::CopyFrom(const CollectionDef& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CollectionDef::IsInitialized() const {

  return true;
}

void CollectionDef::Swap(CollectionDef* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CollectionDef::InternalSwap(CollectionDef* other) {
  std::swap(kind_, other->kind_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CollectionDef::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CollectionDef_descriptor_;
  metadata.reflection = CollectionDef_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CollectionDef_NodeList

// repeated string value = 1;
int CollectionDef_NodeList::value_size() const {
  return value_.size();
}
void CollectionDef_NodeList::clear_value() {
  value_.Clear();
}
 const ::std::string& CollectionDef_NodeList::value(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.CollectionDef.NodeList.value)
  return value_.Get(index);
}
 ::std::string* CollectionDef_NodeList::mutable_value(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.CollectionDef.NodeList.value)
  return value_.Mutable(index);
}
 void CollectionDef_NodeList::set_value(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:tensorflow.CollectionDef.NodeList.value)
  value_.Mutable(index)->assign(value);
}
 void CollectionDef_NodeList::set_value(int index, const char* value) {
  value_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:tensorflow.CollectionDef.NodeList.value)
}
 void CollectionDef_NodeList::set_value(int index, const char* value, size_t size) {
  value_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tensorflow.CollectionDef.NodeList.value)
}
 ::std::string* CollectionDef_NodeList::add_value() {
  return value_.Add();
}
 void CollectionDef_NodeList::add_value(const ::std::string& value) {
  value_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:tensorflow.CollectionDef.NodeList.value)
}
 void CollectionDef_NodeList::add_value(const char* value) {
  value_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:tensorflow.CollectionDef.NodeList.value)
}
 void CollectionDef_NodeList::add_value(const char* value, size_t size) {
  value_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:tensorflow.CollectionDef.NodeList.value)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
CollectionDef_NodeList::value() const {
  // @@protoc_insertion_point(field_list:tensorflow.CollectionDef.NodeList.value)
  return value_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
CollectionDef_NodeList::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.CollectionDef.NodeList.value)
  return &value_;
}

// -------------------------------------------------------------------

// CollectionDef_BytesList

// repeated bytes value = 1;
int CollectionDef_BytesList::value_size() const {
  return value_.size();
}
void CollectionDef_BytesList::clear_value() {
  value_.Clear();
}
 const ::std::string& CollectionDef_BytesList::value(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.CollectionDef.BytesList.value)
  return value_.Get(index);
}
 ::std::string* CollectionDef_BytesList::mutable_value(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.CollectionDef.BytesList.value)
  return value_.Mutable(index);
}
 void CollectionDef_BytesList::set_value(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:tensorflow.CollectionDef.BytesList.value)
  value_.Mutable(index)->assign(value);
}
 void CollectionDef_BytesList::set_value(int index, const char* value) {
  value_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:tensorflow.CollectionDef.BytesList.value)
}
 void CollectionDef_BytesList::set_value(int index, const void* value, size_t size) {
  value_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tensorflow.CollectionDef.BytesList.value)
}
 ::std::string* CollectionDef_BytesList::add_value() {
  return value_.Add();
}
 void CollectionDef_BytesList::add_value(const ::std::string& value) {
  value_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:tensorflow.CollectionDef.BytesList.value)
}
 void CollectionDef_BytesList::add_value(const char* value) {
  value_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:tensorflow.CollectionDef.BytesList.value)
}
 void CollectionDef_BytesList::add_value(const void* value, size_t size) {
  value_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:tensorflow.CollectionDef.BytesList.value)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
CollectionDef_BytesList::value() const {
  // @@protoc_insertion_point(field_list:tensorflow.CollectionDef.BytesList.value)
  return value_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
CollectionDef_BytesList::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.CollectionDef.BytesList.value)
  return &value_;
}

// -------------------------------------------------------------------

// CollectionDef_Int64List

// repeated int64 value = 1 [packed = true];
int CollectionDef_Int64List::value_size() const {
  return value_.size();
}
void CollectionDef_Int64List::clear_value() {
  value_.Clear();
}
 ::google::protobuf::int64 CollectionDef_Int64List::value(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.CollectionDef.Int64List.value)
  return value_.Get(index);
}
 void CollectionDef_Int64List::set_value(int index, ::google::protobuf::int64 value) {
  value_.Set(index, value);
  // @@protoc_insertion_point(field_set:tensorflow.CollectionDef.Int64List.value)
}
 void CollectionDef_Int64List::add_value(::google::protobuf::int64 value) {
  value_.Add(value);
  // @@protoc_insertion_point(field_add:tensorflow.CollectionDef.Int64List.value)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
CollectionDef_Int64List::value() const {
  // @@protoc_insertion_point(field_list:tensorflow.CollectionDef.Int64List.value)
  return value_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
CollectionDef_Int64List::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.CollectionDef.Int64List.value)
  return &value_;
}

// -------------------------------------------------------------------

// CollectionDef_FloatList

// repeated float value = 1 [packed = true];
int CollectionDef_FloatList::value_size() const {
  return value_.size();
}
void CollectionDef_FloatList::clear_value() {
  value_.Clear();
}
 float CollectionDef_FloatList::value(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.CollectionDef.FloatList.value)
  return value_.Get(index);
}
 void CollectionDef_FloatList::set_value(int index, float value) {
  value_.Set(index, value);
  // @@protoc_insertion_point(field_set:tensorflow.CollectionDef.FloatList.value)
}
 void CollectionDef_FloatList::add_value(float value) {
  value_.Add(value);
  // @@protoc_insertion_point(field_add:tensorflow.CollectionDef.FloatList.value)
}
 const ::google::protobuf::RepeatedField< float >&
CollectionDef_FloatList::value() const {
  // @@protoc_insertion_point(field_list:tensorflow.CollectionDef.FloatList.value)
  return value_;
}
 ::google::protobuf::RepeatedField< float >*
CollectionDef_FloatList::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.CollectionDef.FloatList.value)
  return &value_;
}

// -------------------------------------------------------------------

// CollectionDef_AnyList

// repeated .google.protobuf.Any value = 1;
int CollectionDef_AnyList::value_size() const {
  return value_.size();
}
void CollectionDef_AnyList::clear_value() {
  value_.Clear();
}
const ::google::protobuf::Any& CollectionDef_AnyList::value(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.CollectionDef.AnyList.value)
  return value_.Get(index);
}
::google::protobuf::Any* CollectionDef_AnyList::mutable_value(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.CollectionDef.AnyList.value)
  return value_.Mutable(index);
}
::google::protobuf::Any* CollectionDef_AnyList::add_value() {
  // @@protoc_insertion_point(field_add:tensorflow.CollectionDef.AnyList.value)
  return value_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >*
CollectionDef_AnyList::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.CollectionDef.AnyList.value)
  return &value_;
}
const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >&
CollectionDef_AnyList::value() const {
  // @@protoc_insertion_point(field_list:tensorflow.CollectionDef.AnyList.value)
  return value_;
}

// -------------------------------------------------------------------

// CollectionDef

// optional .tensorflow.CollectionDef.NodeList node_list = 1;
bool CollectionDef::has_node_list() const {
  return kind_case() == kNodeList;
}
void CollectionDef::set_has_node_list() {
  _oneof_case_[0] = kNodeList;
}
void CollectionDef::clear_node_list() {
  if (has_node_list()) {
    delete kind_.node_list_;
    clear_has_kind();
  }
}
 const ::tensorflow::CollectionDef_NodeList& CollectionDef::node_list() const {
  // @@protoc_insertion_point(field_get:tensorflow.CollectionDef.node_list)
  return has_node_list()
      ? *kind_.node_list_
      : ::tensorflow::CollectionDef_NodeList::default_instance();
}
::tensorflow::CollectionDef_NodeList* CollectionDef::mutable_node_list() {
  if (!has_node_list()) {
    clear_kind();
    set_has_node_list();
    kind_.node_list_ = new ::tensorflow::CollectionDef_NodeList;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.CollectionDef.node_list)
  return kind_.node_list_;
}
::tensorflow::CollectionDef_NodeList* CollectionDef::release_node_list() {
  if (has_node_list()) {
    clear_has_kind();
    ::tensorflow::CollectionDef_NodeList* temp = kind_.node_list_;
    kind_.node_list_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void CollectionDef::set_allocated_node_list(::tensorflow::CollectionDef_NodeList* node_list) {
  clear_kind();
  if (node_list) {
    set_has_node_list();
    kind_.node_list_ = node_list;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CollectionDef.node_list)
}

// optional .tensorflow.CollectionDef.BytesList bytes_list = 2;
bool CollectionDef::has_bytes_list() const {
  return kind_case() == kBytesList;
}
void CollectionDef::set_has_bytes_list() {
  _oneof_case_[0] = kBytesList;
}
void CollectionDef::clear_bytes_list() {
  if (has_bytes_list()) {
    delete kind_.bytes_list_;
    clear_has_kind();
  }
}
 const ::tensorflow::CollectionDef_BytesList& CollectionDef::bytes_list() const {
  // @@protoc_insertion_point(field_get:tensorflow.CollectionDef.bytes_list)
  return has_bytes_list()
      ? *kind_.bytes_list_
      : ::tensorflow::CollectionDef_BytesList::default_instance();
}
::tensorflow::CollectionDef_BytesList* CollectionDef::mutable_bytes_list() {
  if (!has_bytes_list()) {
    clear_kind();
    set_has_bytes_list();
    kind_.bytes_list_ = new ::tensorflow::CollectionDef_BytesList;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.CollectionDef.bytes_list)
  return kind_.bytes_list_;
}
::tensorflow::CollectionDef_BytesList* CollectionDef::release_bytes_list() {
  if (has_bytes_list()) {
    clear_has_kind();
    ::tensorflow::CollectionDef_BytesList* temp = kind_.bytes_list_;
    kind_.bytes_list_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void CollectionDef::set_allocated_bytes_list(::tensorflow::CollectionDef_BytesList* bytes_list) {
  clear_kind();
  if (bytes_list) {
    set_has_bytes_list();
    kind_.bytes_list_ = bytes_list;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CollectionDef.bytes_list)
}

// optional .tensorflow.CollectionDef.Int64List int64_list = 3;
bool CollectionDef::has_int64_list() const {
  return kind_case() == kInt64List;
}
void CollectionDef::set_has_int64_list() {
  _oneof_case_[0] = kInt64List;
}
void CollectionDef::clear_int64_list() {
  if (has_int64_list()) {
    delete kind_.int64_list_;
    clear_has_kind();
  }
}
 const ::tensorflow::CollectionDef_Int64List& CollectionDef::int64_list() const {
  // @@protoc_insertion_point(field_get:tensorflow.CollectionDef.int64_list)
  return has_int64_list()
      ? *kind_.int64_list_
      : ::tensorflow::CollectionDef_Int64List::default_instance();
}
::tensorflow::CollectionDef_Int64List* CollectionDef::mutable_int64_list() {
  if (!has_int64_list()) {
    clear_kind();
    set_has_int64_list();
    kind_.int64_list_ = new ::tensorflow::CollectionDef_Int64List;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.CollectionDef.int64_list)
  return kind_.int64_list_;
}
::tensorflow::CollectionDef_Int64List* CollectionDef::release_int64_list() {
  if (has_int64_list()) {
    clear_has_kind();
    ::tensorflow::CollectionDef_Int64List* temp = kind_.int64_list_;
    kind_.int64_list_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void CollectionDef::set_allocated_int64_list(::tensorflow::CollectionDef_Int64List* int64_list) {
  clear_kind();
  if (int64_list) {
    set_has_int64_list();
    kind_.int64_list_ = int64_list;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CollectionDef.int64_list)
}

// optional .tensorflow.CollectionDef.FloatList float_list = 4;
bool CollectionDef::has_float_list() const {
  return kind_case() == kFloatList;
}
void CollectionDef::set_has_float_list() {
  _oneof_case_[0] = kFloatList;
}
void CollectionDef::clear_float_list() {
  if (has_float_list()) {
    delete kind_.float_list_;
    clear_has_kind();
  }
}
 const ::tensorflow::CollectionDef_FloatList& CollectionDef::float_list() const {
  // @@protoc_insertion_point(field_get:tensorflow.CollectionDef.float_list)
  return has_float_list()
      ? *kind_.float_list_
      : ::tensorflow::CollectionDef_FloatList::default_instance();
}
::tensorflow::CollectionDef_FloatList* CollectionDef::mutable_float_list() {
  if (!has_float_list()) {
    clear_kind();
    set_has_float_list();
    kind_.float_list_ = new ::tensorflow::CollectionDef_FloatList;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.CollectionDef.float_list)
  return kind_.float_list_;
}
::tensorflow::CollectionDef_FloatList* CollectionDef::release_float_list() {
  if (has_float_list()) {
    clear_has_kind();
    ::tensorflow::CollectionDef_FloatList* temp = kind_.float_list_;
    kind_.float_list_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void CollectionDef::set_allocated_float_list(::tensorflow::CollectionDef_FloatList* float_list) {
  clear_kind();
  if (float_list) {
    set_has_float_list();
    kind_.float_list_ = float_list;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CollectionDef.float_list)
}

// optional .tensorflow.CollectionDef.AnyList any_list = 5;
bool CollectionDef::has_any_list() const {
  return kind_case() == kAnyList;
}
void CollectionDef::set_has_any_list() {
  _oneof_case_[0] = kAnyList;
}
void CollectionDef::clear_any_list() {
  if (has_any_list()) {
    delete kind_.any_list_;
    clear_has_kind();
  }
}
 const ::tensorflow::CollectionDef_AnyList& CollectionDef::any_list() const {
  // @@protoc_insertion_point(field_get:tensorflow.CollectionDef.any_list)
  return has_any_list()
      ? *kind_.any_list_
      : ::tensorflow::CollectionDef_AnyList::default_instance();
}
::tensorflow::CollectionDef_AnyList* CollectionDef::mutable_any_list() {
  if (!has_any_list()) {
    clear_kind();
    set_has_any_list();
    kind_.any_list_ = new ::tensorflow::CollectionDef_AnyList;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.CollectionDef.any_list)
  return kind_.any_list_;
}
::tensorflow::CollectionDef_AnyList* CollectionDef::release_any_list() {
  if (has_any_list()) {
    clear_has_kind();
    ::tensorflow::CollectionDef_AnyList* temp = kind_.any_list_;
    kind_.any_list_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void CollectionDef::set_allocated_any_list(::tensorflow::CollectionDef_AnyList* any_list) {
  clear_kind();
  if (any_list) {
    set_has_any_list();
    kind_.any_list_ = any_list;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CollectionDef.any_list)
}

bool CollectionDef::has_kind() const {
  return kind_case() != KIND_NOT_SET;
}
void CollectionDef::clear_has_kind() {
  _oneof_case_[0] = KIND_NOT_SET;
}
CollectionDef::KindCase CollectionDef::kind_case() const {
  return CollectionDef::KindCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace tensorflow

// @@protoc_insertion_point(global_scope)
